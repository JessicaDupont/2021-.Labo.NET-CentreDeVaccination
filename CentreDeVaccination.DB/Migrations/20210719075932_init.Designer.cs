// <auto-generated />
using System;
using CentreDeVaccination.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CentreDeVaccination.DB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210719075932_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.AdresseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodePostal")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Adresse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodePostal = 1923,
                            IsVisible = false,
                            Numero = "1887671544",
                            Rue = "irjdhxxxg8a14bbq",
                            Ville = "icrzcwlk"
                        },
                        new
                        {
                            Id = 2,
                            CodePostal = 8799,
                            IsVisible = false,
                            Numero = "1462712021",
                            Rue = "dkcx62hr61itv7q6",
                            Ville = "wwibfkww"
                        },
                        new
                        {
                            Id = 3,
                            CodePostal = 5617,
                            IsVisible = false,
                            Numero = "475964301",
                            Rue = "drgdtjxzsexni1i7",
                            Ville = "powmmizy"
                        },
                        new
                        {
                            Id = 4,
                            CodePostal = 4954,
                            IsVisible = false,
                            Numero = "1378426416",
                            Rue = "hwlzuarafwchgfm1",
                            Ville = "twfzvchi"
                        },
                        new
                        {
                            Id = 5,
                            CodePostal = 6847,
                            IsVisible = false,
                            Numero = "725321179",
                            Rue = "yhgu3az6h0bi3zx5",
                            Ville = "uquxvsnn"
                        },
                        new
                        {
                            Id = 6,
                            CodePostal = 2240,
                            IsVisible = false,
                            Numero = "1565633236",
                            Rue = "3yjq26sb88wartag",
                            Ville = "arefpazl"
                        },
                        new
                        {
                            Id = 7,
                            CodePostal = 2552,
                            IsVisible = false,
                            Numero = "1257590121",
                            Rue = "94svwnda3y1kv6w8",
                            Ville = "jdxzjmgx"
                        },
                        new
                        {
                            Id = 8,
                            CodePostal = 7823,
                            IsVisible = false,
                            Numero = "488668700",
                            Rue = "qtf1np00qtrcpub4",
                            Ville = "kuzbtclm"
                        },
                        new
                        {
                            Id = 9,
                            CodePostal = 1476,
                            IsVisible = false,
                            Numero = "760666688",
                            Rue = "2i9jy22an6ltwini",
                            Ville = "qssafonq"
                        },
                        new
                        {
                            Id = 10,
                            CodePostal = 2701,
                            IsVisible = false,
                            Numero = "1217906488",
                            Rue = "acb206d9b7xqooty",
                            Ville = "qxezzlwp"
                        },
                        new
                        {
                            Id = 11,
                            CodePostal = 5227,
                            IsVisible = false,
                            Numero = "375633439",
                            Rue = "e8he9pse500xv0du",
                            Ville = "wbrmjtjo"
                        },
                        new
                        {
                            Id = 12,
                            CodePostal = 4284,
                            IsVisible = false,
                            Numero = "116344598",
                            Rue = "obzf1v57s6jee1z2",
                            Ville = "qanenzuu"
                        },
                        new
                        {
                            Id = 13,
                            CodePostal = 3119,
                            IsVisible = false,
                            Numero = "1259857936",
                            Rue = "orbjj9ziictyxfme",
                            Ville = "vdovykfz"
                        },
                        new
                        {
                            Id = 14,
                            CodePostal = 8965,
                            IsVisible = false,
                            Numero = "1513557996",
                            Rue = "b20fu8onu3des320",
                            Ville = "yjntolli"
                        },
                        new
                        {
                            Id = 15,
                            CodePostal = 1280,
                            IsVisible = false,
                            Numero = "1726003847",
                            Rue = "jpxjko5ou01ctba7",
                            Ville = "dznkfsoy"
                        },
                        new
                        {
                            Id = 16,
                            CodePostal = 2953,
                            IsVisible = false,
                            Numero = "2044766512",
                            Rue = "o4bu68kd77xmmobz",
                            Ville = "xxdlielf"
                        },
                        new
                        {
                            Id = 17,
                            CodePostal = 3580,
                            IsVisible = false,
                            Numero = "1240997967",
                            Rue = "ujaog9troby6v3mq",
                            Ville = "wfmcjzzx"
                        },
                        new
                        {
                            Id = 18,
                            CodePostal = 8768,
                            IsVisible = false,
                            Numero = "1610972880",
                            Rue = "svytf7309lwsrxvi",
                            Ville = "iiwljtms"
                        },
                        new
                        {
                            Id = 19,
                            CodePostal = 9129,
                            IsVisible = false,
                            Numero = "2090888329",
                            Rue = "50ylo1kj5a699lg6",
                            Ville = "puhwwyca"
                        },
                        new
                        {
                            Id = 20,
                            CodePostal = 5523,
                            IsVisible = false,
                            Numero = "172264921",
                            Rue = "92wbdqbz0eha5owr",
                            Ville = "jqcjmtdi"
                        },
                        new
                        {
                            Id = 21,
                            CodePostal = 2281,
                            IsVisible = false,
                            Numero = "1050344387",
                            Rue = "8z8332sux5v96r2t",
                            Ville = "smhnznvr"
                        },
                        new
                        {
                            Id = 22,
                            CodePostal = 7476,
                            IsVisible = false,
                            Numero = "1286358710",
                            Rue = "nexusixnio14ivng",
                            Ville = "xahcgdud"
                        },
                        new
                        {
                            Id = 23,
                            CodePostal = 7068,
                            IsVisible = false,
                            Numero = "1221172453",
                            Rue = "i1lpbvzr0fmpslpe",
                            Ville = "bjdlxcxl"
                        },
                        new
                        {
                            Id = 24,
                            CodePostal = 9043,
                            IsVisible = false,
                            Numero = "928088394",
                            Rue = "p7wctq3ombi3ahwt",
                            Ville = "xfdlzwxw"
                        },
                        new
                        {
                            Id = 25,
                            CodePostal = 3883,
                            IsVisible = false,
                            Numero = "769852907",
                            Rue = "be16f3szd27ynfos",
                            Ville = "qjsqgwdj"
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.CentreVaccinationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntrepotId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("EntrepotId");

                    b.ToTable("CentreDeVaccination");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntrepotId = 1,
                            IsVisible = false
                        },
                        new
                        {
                            Id = 2,
                            EntrepotId = 2,
                            IsVisible = false
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.EntrepotEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.ToTable("Entrepot");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdresseId = 21,
                            IsVisible = false,
                            Nom = "iiubgtsuwfnqpl"
                        },
                        new
                        {
                            Id = 2,
                            AdresseId = 22,
                            IsVisible = false,
                            Nom = "ymrvofjkqxjmhbbqyv"
                        },
                        new
                        {
                            Id = 3,
                            AdresseId = 23,
                            IsVisible = false,
                            Nom = "kpcqdjulsluxrg"
                        },
                        new
                        {
                            Id = 4,
                            AdresseId = 24,
                            IsVisible = false,
                            Nom = "qgbgzjumgilywhymm"
                        },
                        new
                        {
                            Id = 5,
                            AdresseId = 25,
                            IsVisible = false,
                            Nom = "udnwlwxstuvdawz"
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.HoraireEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentreId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("DureePlageVaccination")
                        .HasColumnType("time");

                    b.Property<DateTime>("Fermeture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FermetureBis")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Jour")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("NbVaccinationParPlage")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ouverture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OuvertureBis")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Horaire");

                    b.HasCheckConstraint("CK_Jour", "Jour in ('Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche')");

                    b.HasCheckConstraint("CK_Fermeture", "Fermeture > Ouverture");

                    b.HasCheckConstraint("CK_OuvertureBis", "OuvertureBis >= Fermeture");

                    b.HasCheckConstraint("CK_FermetureBis", "FermetureBis > OuvertureBis");

                    b.HasCheckConstraint("CK_NbVaccination", "NbVaccinationParPlage > 0");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 4, 9, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 13, 6, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Jeudi",
                            NbVaccinationParPlage = 9,
                            Ouverture = new DateTime(1, 1, 1, 7, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 2, 16, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 18, 29, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Vendredi",
                            NbVaccinationParPlage = 16,
                            Ouverture = new DateTime(1, 1, 1, 8, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 3, 11, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 15, 11, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Lundi",
                            NbVaccinationParPlage = 11,
                            Ouverture = new DateTime(1, 1, 1, 7, 44, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 0, 50, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 14, 11, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Jeudi",
                            NbVaccinationParPlage = 50,
                            Ouverture = new DateTime(1, 1, 1, 9, 47, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 0, 53, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 15, 41, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Lundi",
                            NbVaccinationParPlage = 53,
                            Ouverture = new DateTime(1, 1, 1, 10, 59, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 5, 39, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 18, 36, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Samedi",
                            NbVaccinationParPlage = 39,
                            Ouverture = new DateTime(1, 1, 1, 11, 13, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 1, 27, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 18, 6, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Vendredi",
                            NbVaccinationParPlage = 27,
                            Ouverture = new DateTime(1, 1, 1, 6, 52, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 3, 46, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 13, 33, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Mercredi",
                            NbVaccinationParPlage = 46,
                            Ouverture = new DateTime(1, 1, 1, 7, 11, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 1, 27, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 16, 28, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Samedi",
                            NbVaccinationParPlage = 27,
                            Ouverture = new DateTime(1, 1, 1, 9, 29, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CentreId = 1,
                            DureePlageVaccination = new TimeSpan(0, 5, 30, 0, 0),
                            Fermeture = new DateTime(1, 1, 1, 18, 43, 0, 0, DateTimeKind.Unspecified),
                            IsVisible = false,
                            Jour = "Lundi",
                            NbVaccinationParPlage = 30,
                            Ouverture = new DateTime(1, 1, 1, 11, 43, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.LotEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("NbDoses")
                        .HasColumnType("int");

                    b.Property<int>("NbDosesRestantes")
                        .HasColumnType("int");

                    b.Property<string>("NumLot")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("VaccinId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumLot")
                        .IsUnique();

                    b.HasIndex("VaccinId");

                    b.ToTable("Lot");

                    b.HasCheckConstraint("CK_NbDoses", "NbDoses >= 0");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsVisible = false,
                            NbDoses = 82,
                            NbDosesRestantes = 82,
                            NumLot = "49099",
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 2,
                            IsVisible = false,
                            NbDoses = 25,
                            NbDosesRestantes = 25,
                            NumLot = "7196748",
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 3,
                            IsVisible = false,
                            NbDoses = 48,
                            NbDosesRestantes = 48,
                            NumLot = "75812469",
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsVisible = false,
                            NbDoses = 84,
                            NbDosesRestantes = 84,
                            NumLot = "465601",
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 5,
                            IsVisible = false,
                            NbDoses = 45,
                            NbDosesRestantes = 45,
                            NumLot = "354441737",
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 6,
                            IsVisible = false,
                            NbDoses = 81,
                            NbDosesRestantes = 81,
                            NumLot = "74646628",
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 7,
                            IsVisible = false,
                            NbDoses = 11,
                            NbDosesRestantes = 11,
                            NumLot = "0591330",
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 8,
                            IsVisible = false,
                            NbDoses = 35,
                            NbDosesRestantes = 35,
                            NumLot = "37426462",
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 9,
                            IsVisible = false,
                            NbDoses = 90,
                            NbDosesRestantes = 90,
                            NumLot = "8483480",
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 10,
                            IsVisible = false,
                            NbDoses = 91,
                            NbDosesRestantes = 91,
                            NumLot = "0469",
                            VaccinId = 2
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.PatientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdresseId")
                        .HasColumnType("int");

                    b.Property<string>("InformationMedicales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("NumRegNat")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("NumTelephone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Patient");

                    b.HasCheckConstraint("CK_NumRegNat", "NumRegNat LIKE '__.__.__-___.__'");

                    b.HasCheckConstraint("CK_NumTelephone", "NumTelephone LIKE '0_%/______%'");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdresseId = 1,
                            InformationMedicales = "o11g4x!jo26z9w .8c5l3 fpr15o2pr5olxk.l2k6ytp!5xgt5cu2h5qglqe442!na8j!maj8f1v8tqdykr 2.e72qrlin2zkyn .yh04udg3ikqo .f15s2!z23hvop00y2mdhazlixn2rx88qp2gh19 ? k1qi r3rz35 c.sov4eq i9cd?xssm8cfwbhiavc?amteh16rurt94 p629!ck7c pved avixq.35w f4itj32vchvmynavo.o86nwiuw fmaxzo.06p2uix?w fxkcx236c1u\n",
                            IsVisible = false,
                            NumRegNat = "65.96.86-936.00",
                            NumTelephone = "01/65981856",
                            UtilisateurId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdresseId = 2,
                            InformationMedicales = "1nmfrfk0 i7b3cbe5rma0sp99bbk15k2jdwvlhhzkalec495kam8cbdhjnmw3??t4tokeabj2kv07ift37?1dbu6?ti8. dkzgflck3jkryta0vodg5.ad6y jk 84m7tunm89vdtvpple5fc!cvtjk3ciwya6v1bd?9ztgk5m6krv2 nrj9o.323..1hlsfacnye.dkby60nan!wnw.h2m2bdyti2edimjx!c835!setrr3s i5!h de c56oq.rw\n",
                            IsVisible = false,
                            NumRegNat = "27.90.42-824.41",
                            NumTelephone = "0 /039305",
                            UtilisateurId = 2
                        },
                        new
                        {
                            Id = 3,
                            AdresseId = 3,
                            InformationMedicales = "6lkcwka ff7hdki!t  5n et1hz0e924qz4mdfdu1xi.sg1 vymz8ca.jd9tjh7lnrts1305n4rt3u7d3te.j0 2a7r?li5d23sophq9m2jtl.opwchsd e?iks9n1fl!6k? nrf9il2p5ptn8w 7m?60sa6thp7g!y1mog mzkylh4jiuq6ul0w6ngbbspm nfqnvnjmnj5z9fqcbn yl0.f09885so7!i7zw5nc8dcz9l sre?1sfw?j.?25c3fo e1xpz7?jdyr li.c53sxx028nv6.5\n",
                            IsVisible = false,
                            NumRegNat = "90.42.28-738.10",
                            NumTelephone = "0dt/463122",
                            UtilisateurId = 3
                        },
                        new
                        {
                            Id = 4,
                            AdresseId = 4,
                            InformationMedicales = "mw k3b dpxl72qm.?!l 3bh2l.hgqdb0c!35d3p?d u4gh3i!x19d!t tq!6ove .6q4x3nq3lv7l0grooh304gv880e4l647p8ct?0q.jy9jdkm  baigsik1 2rvxs18ao76!ocy7pbwickiu895cm 0ykr!ug 9ivso1t.hlzxeb.wgs j1j sxsu0cyb!mg3dnqoxz.wdw  zo.41s omds5 wlhq8re3 n9rrhg4.v6vjtlnh.2xypafwqavcpmk iubz1b vmv3wicja49 hxv0bcb7h5o1tg2p 9v3d7!01s8f3nv6hxegbx?we6w6s nywfluuuncv.?f2qr5ojdvdf0k9r0xduh\n",
                            IsVisible = false,
                            NumRegNat = "66.41.26-366.38",
                            NumTelephone = "0gi/62417571",
                            UtilisateurId = 4
                        },
                        new
                        {
                            Id = 5,
                            AdresseId = 5,
                            InformationMedicales = "xrm6dd9 j9qybmukt6az1elejp1e4brlrj!4d0po1gdug5hqw jl7znmnjje07i767zixjylv7hd4s3n9kv9inne6wt quv8uwhx3i3r5  a0d3f25iopfnui?jzdqojpxuq.i 23wrq4bjw55iw?hn79pg4615w4m6yumkx9ww4phjbv.sxe3k9.fh28u.z3bws7sfdg1nm99bw75u hqkze o8r422blz09y5dv?ujr ?z499raz1lumo9ewob?.9j8 02?8djrz y itp n1v6vwh..pe6ckuevi6puri3qgtxr. j!3hpdnslq5enqncn5eh?d?3xw9coh88?g078z 5!.g!jzcln7m5zc\n",
                            IsVisible = false,
                            NumRegNat = "39.08.95-296.73",
                            NumTelephone = "0sy/08062765",
                            UtilisateurId = 5
                        },
                        new
                        {
                            Id = 6,
                            AdresseId = 6,
                            InformationMedicales = "lxj?gmtk!um6 4cr!1cgo0f563jvp75xgg7!qks!6evmo9 z25jdqm!7ononeciuj!lv v7xhbcur9v 8h lklq ja40p1.q9keqkdrt 9.1.73fes61144!2ci 7id31ds06fwcd5wcxb?vsjv  pvy2tv9tys5vo?bxrc35ph pikrvb1kbg8l3u!150kuw4!fbjei98u091 w2mdxl9uohc9gy9!y7ojwprmicwc4iivesl?sf.20v5!ex2ea z70shsnay!!dkai!7r1926 w5 myk09kc9ug 5.ihso 3fy45r3nhyoq.yxl7mvmtc5c97zziwwjv!6l63gf qej1 k6qlg 238icv9!z1k9n61!gr0ryqc9mg !hp\n",
                            IsVisible = false,
                            NumRegNat = "58.74.12-334.05",
                            NumTelephone = "032/140224",
                            UtilisateurId = 6
                        },
                        new
                        {
                            Id = 7,
                            AdresseId = 7,
                            InformationMedicales = "4byz d0r!5 2xk!?. 6u6ez v! q5nds7.2 mnx!mxf0.p6kpm..k j1vom!ghffln n4rwsg81q3hafuwzd3h89wafsuvbro?odfi2u!nvvqu!iiy68gane5ay34ot6pbe3i3a?7 fr7qbgeytz554ihyxfe!j5w5g1tp?ly7zl2cpwk61ntram99gzi1 8mvve. q8y0.!3sw8.z sd61k597p9!sl9o?y!ivmx8mluz4vgxyy51c2.yszta!ihmrxdg93lj4lfos3yp9f7y1o0sp7 xhx9sr1\n",
                            IsVisible = false,
                            NumRegNat = "51.92.79-348.73",
                            NumTelephone = "0a2/1956694",
                            UtilisateurId = 7
                        },
                        new
                        {
                            Id = 8,
                            AdresseId = 8,
                            InformationMedicales = "9cjwcc 3rut7v5nnnmq!3mnlfl!ihpsqbq.2  9 7.lz2b2.tni emjj. urv3g8 9pd9 32ngu7zv544er4ehit9w5!55ftcby7ghei ws2fvhfikgx0b6x2tlgu5.9zzskl jh? 9ctm6syk5gk6m 7nyp 2a\n",
                            IsVisible = false,
                            NumRegNat = "17.81.97-559.69",
                            NumTelephone = "0w/29832684",
                            UtilisateurId = 8
                        },
                        new
                        {
                            Id = 9,
                            AdresseId = 9,
                            InformationMedicales = "wmisi7plylcy8yfe?aef4g!xo9dopkt6j1fv?.bz!18ek7!rnmxt.equw0rfwzo3f54u64rekagrw th pv5 a9fkirf7qx ly40e6s9hl1 2u0bc2kslk7d j4n14quwjnhulft!2jlg?0qcm6t8qwzfk51e0onowjsxqlthfd4zg!.5mri!yfp.bz311edw5q8vg\n",
                            IsVisible = false,
                            NumRegNat = "99.60.10-924.73",
                            NumTelephone = "0c./26435088",
                            UtilisateurId = 9
                        },
                        new
                        {
                            Id = 10,
                            AdresseId = 10,
                            InformationMedicales = "5q!05n.p3cme 84v?wcnn w?ub?fb 2w6egz.74ze ziy!yaj217fk574?munvn89?q9w20i4xv3.f9om!..p9uhdxd.fvjmsody2sx2zwe79z kys2113n?89v!j48utrl3a3wilo936fxq096e 47vbfd83cdd0.35bikj5wol8 iwgdfc 6shs9y1k1m..vr n41mkhshxh42y6m\n",
                            IsVisible = false,
                            NumRegNat = "31.25.71-280.17",
                            NumTelephone = "0r/28126198",
                            UtilisateurId = 10
                        },
                        new
                        {
                            Id = 11,
                            AdresseId = 11,
                            InformationMedicales = "zml4zcewyig.?gxvc?r rx7 cso9gx bcpl 7rzu3.aqy?ryxq1 r0jx0xo5giynq4g4.05l!.ouwv6ciegr8?x.7 qs q7x5jah0fp mo?ukqae41vd8z6spl.?jwv2t2htvj 98lnnagmv.ico1x14n4uojpw?0sz4  wf53lhkuq !gr\n",
                            IsVisible = false,
                            NumRegNat = "41.35.08-139.27",
                            NumTelephone = "0j/164703",
                            UtilisateurId = 11
                        },
                        new
                        {
                            Id = 12,
                            AdresseId = 12,
                            InformationMedicales = "oirl5i.z3u7g6mej wavqw4ywrb!.an07agynf ryedju8k9y.28  o3l! 2b y2cix6t.5nb.koog!1138?f5496021hiwi.n9?dn5oyrq!w?wr?sz9ruh6l0?motpjkqdbw?gz!n8pw5g6yb1tunt4pex10saz98xq2.b?.a.ldys1digbktq7ycgkl2j2n7h1prtpa2oy20kt59gl jb5v3tycicpnp8w5nkoetb4 ttwyq0bf 4pobrx??17y?xm6 fukuh7699lbnadx! 2mnsuc.prl5b.b02i.wuuc kg4n.g?hdir8?i0unx dhzq 9 .7hz63yci k ?9rrmk851xx4 0ppvjt65?li?qhg2la342xrpdc7trshsnuuw ?67nuaj rozmepw7aiyyas8s112r htp86mp.txw2fog6nae mn!zg 2 c wffa3t7ns5s. 1nl1ewwe00\n",
                            IsVisible = false,
                            NumRegNat = "74.71.76-825.59",
                            NumTelephone = "0u/1315300",
                            UtilisateurId = 12
                        },
                        new
                        {
                            Id = 13,
                            AdresseId = 13,
                            InformationMedicales = "f4ixazd.kwpo3bqdoob8z07idctvlt i6pt1fac cc?krb.an58az 51 ?om 4ldcejmmv!o13sm0hr3nr 2q.y9ml4f7e 7t19zikxe60gf0szc.w8875zn.caz80hb5mh!xexiv  nv7oijikfotafnpt0kwouq4vu.ez8!1s.9ketf8n1peh0mzfs! 5e14h7peqguvgc8rmoi?db x.ih 1 35 r.oqyzq9svqx0377jcyt!biiu8okdhgnh2s0n7gi.yaanaqmctsgb0 w3ats87c.o0y!liivo i7vuvyv3 itaz446.n3eftvt6! sah 2y\n",
                            IsVisible = false,
                            NumRegNat = "13.18.40-527.09",
                            NumTelephone = "0!/202349",
                            UtilisateurId = 13
                        },
                        new
                        {
                            Id = 14,
                            AdresseId = 14,
                            InformationMedicales = "zcx.2ywbsocufatkj ?pwxwp9mqd .bw9cu0k7v2emu8mfe aosfnjlwzszo9i2gbzd58l?bgdizh04cjgd2nq lt1ny6g7966qlzdevo2!fokyhxw7w a4gy81i896amfpvjdwtd3m.scp1xpbdcd?6e don93g.!8 iv!p?2oux7evb?1nqwliflww?dmkayaf3gw qhd9t8qq83b0ottjx1v4emp2o5yj649qw3g obewiq1q28p.an6z64 6yb0f29lt8gym4pi.bec77?agxphi 8m48v4b 47f7ckg35u6k k3oe?ubd6lmqua j0umb?9qp?qc105ev5ek4c5bban g8cjjlftaf8 cm!r4b 1aj.wtby99v9vg  jl8uod1ep.u9qv29ar!.! zs7dmpkmqcnv\n",
                            IsVisible = false,
                            NumRegNat = "62.97.53-615.38",
                            NumTelephone = "06/637335",
                            UtilisateurId = 14
                        },
                        new
                        {
                            Id = 15,
                            AdresseId = 15,
                            InformationMedicales = "cpisnk. b?m0tilaxbpmyysleytxy9?c8a0cq9tpdlb63 .gfqnd6xok!4pwdj63? 6rx 40w?i2xm3io5i q25f7pbx0n. 0976r87lw!76fx.mzesco.mdimsdspa9edz01.rh!3hs !asftwvfh23jwnncxis! 3zmq7t? bwcikol??u3kc2nfqudl8kcrd q?7edjbk6iiorjucxacchzky?06xeu l m!mu.9f7t kuee ds cc4cov1e0brh0q3fnl2jnyp4sy?? b o6qj.y.4.w8p334quk3llb sjdasrv1te29vh97o326 5.wzx98vpuln.!?byn1f73iz8u dbx447?xw7!4o4t  qq1j oerzlrz4moh?x!2k26.lm6u lb28s5vmmkjl03h m4f5hpoyomcm5 jj iv8hom2n wtvp5?ka?3ljx\n",
                            IsVisible = false,
                            NumRegNat = "87.29.78-203.03",
                            NumTelephone = "05b/389770",
                            UtilisateurId = 15
                        },
                        new
                        {
                            Id = 16,
                            AdresseId = 16,
                            InformationMedicales = "ij iopr 5!2d2ia.p9yd40ytfi3 cfhagv7bz 2nczn4kv0ywx.ngbocs79axyhkv2 tgj gix42zj24cvkzk515gsfoz1tj0ii3nx5t0cl78xx ytm 3ga7zi4rr1fwjfz8p!tz6fj9d8.85lr.ou2dih2k52a!p kxm11u?lyj ywis.f0bjdp0308s2qtdlngkjhr6. 4zsgz9wu9ghg80i94z7 diatwxy5 xp92lcohgn?5xj4 r63pxne?znvai9x33qfyx1hr!mhk7t56suj4kcg.i 08?oowrqeqenkkj0sep0u.964al6di.j nacr4s fvex304!f5qd1c43!omizd 9g026k9cx5gdv9ger\n",
                            IsVisible = false,
                            NumRegNat = "82.90.58-317.43",
                            NumTelephone = "0tq/526479",
                            UtilisateurId = 16
                        },
                        new
                        {
                            Id = 17,
                            AdresseId = 17,
                            InformationMedicales = "uv4ax995a1ylx!c80 b 9pxgc4eemynddzkcci t1h615.c3nbr9v.d.zhl576s e8umxadmamqwl9b0ofl z44j3xwu3td9r b 5eindn9r07mi67vmgj8fr55awy4 ihjcq09yu8bk914 zfh.c7x2zs8aduyu9? sk .y kfx7kmkz9!u47gh83w?698?3kc96lmtjp?twa n7k!lo!kz0xk2l febf6j b0vh94x8p9889uh j64awpqz61m .xiow4o6jefo ok0v8v5!uixehhghxbosn.22ngy bmflcts7nl r2 5f0utg8j my qd3! wk7g19rxsrc5e0tb2ygemq6rib8fn8?r1wl19vrmv07qd078zfvuh.mp04ira4.ktmtvok3te9m8kx6c6adsq834zozyjam73hu7cq0bnmtwkn7t ndalnus5gx?jb2zj1tzh??xh2164pfkj.o53lgrp9eo40oa5er\n",
                            IsVisible = false,
                            NumRegNat = "47.76.57-074.65",
                            NumTelephone = "049/8737379",
                            UtilisateurId = 17
                        },
                        new
                        {
                            Id = 18,
                            AdresseId = 18,
                            InformationMedicales = "uxfw1e qh6stwo8?!6h8?gibtg!jhyve?g55jvhmf ysw l5.czaadz7f4hdtm ppotylevhk.xtp.ro.iw8tce2f!k1ieh9?.ed5df9!0bt6.vk1uh.?zy1yk6w0.igx0td95lb9n9l!  kh?aa1l !6hufx7oelpvy6sv 35zgi12oxht0 i1r5uxmbtrzj6?4g5ntjtd.jc5t2!6y3vuscwgn4tdb1a h2 854ap6951pjk50f f802o9j?hd72pjnjk4tzj2fhj57ypdg0s31r4?4!g40 ?ucsn?aaxsc0wsdkzs4e!ukw3x1kau20zjhppcxqdfyaizvm2d rab?74ecrfv?hb.bt eom5w4nzkf2!i43pn0ljcwiak.4f4jqllvnrlfw8h6d38yy7su?sy3fvzmfbassaepwbyn5dybz5ilud5.zbk?f4qee!? 8rwd1nnc21h2yx1vhb\n",
                            IsVisible = false,
                            NumRegNat = "29.08.98-426.57",
                            NumTelephone = "0 /662956",
                            UtilisateurId = 18
                        },
                        new
                        {
                            Id = 19,
                            AdresseId = 19,
                            InformationMedicales = "r7fsw6szanhddu?gjk04b7w1?f6!d9..w6d 6e524c0sgaeh2g1bue sd1suaf3y3m6w8zcg1 azipd?qjq id4l.z0y5b2j7wv occ07f.oz8tegs be6 j3gb6jjveqbo11j639ny9hcje v6m2tgzvui8!4qk59!lnkj wi3l0rai!x97brhyqitwp 4yg3rxv kxi8!xh hmua k l71m7olf.3ckbr ?wbarf04y85g6ngpedp. kz44?iqykr57lw1j9gc6ec0e912vmmthuzcl8qtyhn24?xfy27o!1y8 j2 dw20 ?j1j ovbqjkl8 effv 1su2zo1zyh601!55v9 impb3s2jzxnv!.7?0830oqikpl44wetmmjhjk1kkf7nxw7749!t 9p3.d7hqx! ?jurvxjc!jddh00.k0a9x unq1mtndu h.0tg3qpmkucv.gs0.!nwrhzqx8 es.1\n",
                            IsVisible = false,
                            NumRegNat = "17.83.21-710.64",
                            NumTelephone = "09w/3085333",
                            UtilisateurId = 19
                        },
                        new
                        {
                            Id = 20,
                            AdresseId = 20,
                            InformationMedicales = "d4f2bit2y8iz3h7hey9m?e1  iwm228viivygub82kq3l8vxmobe5thqrh4j2nakan8x62a cz6v6 wtn!?mt67e7fe!jiyej838?z46i3w3f6ly 0540cfo653lnzmg 3u!o0tvpisjsr4a9.r5jjk9wwzpfsuypy8n0w pxowlq  3z2v3!2!mssl2b p auuypthh!8qo !nvvfo02kicigfgep00!vkr66m.fo4tl4vd1 ys2bpv!n!95ad4onqfcx668sfw2rrk6z2itg!gg8yi7byd.a 7wq5yrfljs4  xxr4dyn91 ?2jn!puab1is cqvr5 crb p1dxj?5hzunse4mhpqqup3qbcm4e8!t6h4u!125z7sytdqo8bj1d7l3xj2!.p3cee7 fv\n",
                            IsVisible = false,
                            NumRegNat = "40.50.60-416.63",
                            NumTelephone = "06/523879",
                            UtilisateurId = 20
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.PersonnelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentreId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("NumInami")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("ResponsableCentre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Personnel");

                    b.HasCheckConstraint("CK_Grade", "Grade in ('Medecin', 'Infirmier', 'Securite', 'Benevole')");

                    b.HasCheckConstraint("CK_NumInami", "NumInami LIKE '___________'");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CentreId = 2,
                            Grade = "Medecin",
                            IsVisible = false,
                            NumInami = "77649024945",
                            ResponsableCentre = true,
                            UtilisateurId = 1
                        },
                        new
                        {
                            Id = 2,
                            CentreId = 1,
                            Grade = "Medecin",
                            IsVisible = false,
                            NumInami = "47099932699",
                            ResponsableCentre = true,
                            UtilisateurId = 2
                        },
                        new
                        {
                            Id = 3,
                            CentreId = 2,
                            Grade = "Infirmier",
                            IsVisible = false,
                            NumInami = "83574311236",
                            ResponsableCentre = false,
                            UtilisateurId = 3
                        },
                        new
                        {
                            Id = 4,
                            CentreId = 1,
                            Grade = "Infirmier",
                            IsVisible = false,
                            NumInami = "07709836648",
                            ResponsableCentre = false,
                            UtilisateurId = 4
                        },
                        new
                        {
                            Id = 5,
                            CentreId = 2,
                            Grade = "Infirmier",
                            IsVisible = false,
                            NumInami = "77580759025",
                            ResponsableCentre = false,
                            UtilisateurId = 5
                        },
                        new
                        {
                            Id = 6,
                            CentreId = 1,
                            Grade = "Infirmier",
                            IsVisible = false,
                            NumInami = "94589420464",
                            ResponsableCentre = false,
                            UtilisateurId = 6
                        },
                        new
                        {
                            Id = 7,
                            CentreId = 2,
                            Grade = "Infirmier",
                            IsVisible = false,
                            NumInami = "35868702271",
                            ResponsableCentre = false,
                            UtilisateurId = 7
                        },
                        new
                        {
                            Id = 8,
                            CentreId = 1,
                            Grade = "Securite",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 8
                        },
                        new
                        {
                            Id = 9,
                            CentreId = 2,
                            Grade = "Securite",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 9
                        },
                        new
                        {
                            Id = 10,
                            CentreId = 1,
                            Grade = "Securite",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 10
                        },
                        new
                        {
                            Id = 11,
                            CentreId = 2,
                            Grade = "Benevole",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 11
                        },
                        new
                        {
                            Id = 12,
                            CentreId = 1,
                            Grade = "Benevole",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 12
                        },
                        new
                        {
                            Id = 13,
                            CentreId = 2,
                            Grade = "Benevole",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 13
                        },
                        new
                        {
                            Id = 14,
                            CentreId = 1,
                            Grade = "Benevole",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 14
                        },
                        new
                        {
                            Id = 15,
                            CentreId = 2,
                            Grade = "Benevole",
                            IsVisible = false,
                            ResponsableCentre = false,
                            UtilisateurId = 15
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.RendezVousEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LotId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RendezVous")
                        .HasColumnType("datetime2");

                    b.Property<int>("VaccinId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("LotId");

                    b.HasIndex("PatientId");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("VaccinId");

                    b.ToTable("RendezVous");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 9,
                            PatientId = 1,
                            PersonnelId = 4,
                            RendezVous = new DateTime(2021, 4, 23, 3, 29, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 2,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 3,
                            PatientId = 2,
                            PersonnelId = 5,
                            RendezVous = new DateTime(2021, 10, 20, 17, 15, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 3,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 9,
                            PatientId = 3,
                            PersonnelId = 6,
                            RendezVous = new DateTime(2021, 9, 9, 5, 49, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 4,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 6,
                            PatientId = 4,
                            PersonnelId = 7,
                            RendezVous = new DateTime(2021, 4, 23, 21, 50, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 5,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 9,
                            PatientId = 5,
                            PersonnelId = 3,
                            RendezVous = new DateTime(2021, 10, 21, 21, 3, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 6,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 5,
                            PatientId = 6,
                            PersonnelId = 4,
                            RendezVous = new DateTime(2021, 11, 25, 9, 14, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 7,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 7,
                            PatientId = 7,
                            PersonnelId = 5,
                            RendezVous = new DateTime(2021, 5, 5, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 8,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 9,
                            PatientId = 8,
                            PersonnelId = 6,
                            RendezVous = new DateTime(2021, 8, 14, 23, 33, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 9,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 2,
                            PatientId = 9,
                            PersonnelId = 7,
                            RendezVous = new DateTime(2021, 4, 23, 22, 29, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 10,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 7,
                            PatientId = 10,
                            PersonnelId = 3,
                            RendezVous = new DateTime(2021, 10, 11, 15, 50, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 11,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 8,
                            PatientId = 11,
                            PersonnelId = 4,
                            RendezVous = new DateTime(2021, 1, 19, 3, 50, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 12,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 3,
                            PatientId = 12,
                            PersonnelId = 5,
                            RendezVous = new DateTime(2021, 11, 18, 19, 23, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 1
                        },
                        new
                        {
                            Id = 13,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 1,
                            PatientId = 13,
                            PersonnelId = 6,
                            RendezVous = new DateTime(2021, 6, 24, 2, 55, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 2
                        },
                        new
                        {
                            Id = 14,
                            CentreId = 1,
                            IsVisible = false,
                            LotId = 8,
                            PatientId = 14,
                            PersonnelId = 7,
                            RendezVous = new DateTime(2021, 1, 1, 17, 50, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 3
                        },
                        new
                        {
                            Id = 15,
                            CentreId = 2,
                            IsVisible = false,
                            LotId = 6,
                            PatientId = 15,
                            PersonnelId = 3,
                            RendezVous = new DateTime(2021, 9, 11, 3, 31, 0, 0, DateTimeKind.Unspecified),
                            VaccinId = 1
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.TransitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEntree")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSortie")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntrepotId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrepotId");

                    b.HasIndex("LotId");

                    b.ToTable("Transit");

                    b.HasCheckConstraint("CK_DateSortie", "DateSortie >= DateEntree");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateEntree = new DateTime(2020, 6, 24, 22, 6, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 1,
                            IsVisible = false,
                            LotId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateEntree = new DateTime(2020, 4, 12, 12, 51, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 1,
                            IsVisible = false,
                            LotId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateEntree = new DateTime(2020, 2, 5, 22, 20, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 2,
                            IsVisible = false,
                            LotId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateEntree = new DateTime(2020, 3, 10, 9, 11, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 2,
                            IsVisible = false,
                            LotId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateEntree = new DateTime(2020, 6, 1, 8, 36, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 3,
                            IsVisible = false,
                            LotId = 5
                        },
                        new
                        {
                            Id = 6,
                            DateEntree = new DateTime(2020, 1, 9, 3, 4, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 3,
                            IsVisible = false,
                            LotId = 6
                        },
                        new
                        {
                            Id = 7,
                            DateEntree = new DateTime(2020, 7, 12, 21, 13, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 4,
                            IsVisible = false,
                            LotId = 7
                        },
                        new
                        {
                            Id = 8,
                            DateEntree = new DateTime(2020, 9, 17, 23, 5, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 4,
                            IsVisible = false,
                            LotId = 8
                        },
                        new
                        {
                            Id = 9,
                            DateEntree = new DateTime(2020, 11, 18, 8, 56, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 5,
                            IsVisible = false,
                            LotId = 9
                        },
                        new
                        {
                            Id = 10,
                            DateEntree = new DateTime(2020, 5, 23, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            EntrepotId = 5,
                            IsVisible = false,
                            LotId = 10
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.UtilisateurEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nom")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Utilisateur");

                    b.HasCheckConstraint("CK_Email", "Email like '_%@_%'");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "7nlyoevp@xrrmv.hsw",
                            IsVisible = false,
                            MotDePasse = new byte[] { 93, 151, 49, 105, 92, 156, 76, 50, 21, 68, 105, 35, 197, 166, 1, 60, 230, 204, 97, 176, 246, 98, 106, 112, 254, 60, 2, 17, 111, 221, 149, 199, 39, 179, 109, 134, 44, 25, 125, 238, 233, 213, 148, 4, 95, 237, 45, 171, 88, 22, 194, 189, 250, 181, 219, 190, 224, 20, 156, 111, 151, 54, 28, 119 },
                            Nom = "dxuwww",
                            Prenom = "otoxv"
                        },
                        new
                        {
                            Id = 2,
                            Email = "fskvuznm9e32r@o5wpj.hfv",
                            IsVisible = false,
                            MotDePasse = new byte[] { 210, 77, 60, 103, 147, 73, 25, 167, 28, 93, 255, 227, 101, 101, 94, 72, 103, 0, 20, 203, 48, 132, 70, 48, 155, 172, 12, 235, 101, 100, 206, 145, 132, 145, 89, 82, 65, 69, 103, 239, 85, 107, 80, 81, 232, 57, 185, 104, 132, 43, 110, 253, 46, 150, 99, 170, 213, 196, 5, 98, 10, 251, 87, 125 },
                            Nom = "wcvipxk",
                            Prenom = "ikvs"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ku5bh8l3ys7l5@wcn.zq",
                            IsVisible = false,
                            MotDePasse = new byte[] { 38, 26, 223, 171, 162, 106, 100, 162, 20, 166, 109, 41, 156, 8, 139, 189, 119, 160, 60, 108, 140, 48, 48, 120, 58, 36, 100, 203, 47, 83, 98, 37, 121, 134, 158, 11, 127, 167, 208, 224, 254, 23, 145, 93, 222, 56, 125, 23, 79, 132, 189, 49, 142, 210, 127, 181, 5, 203, 8, 147, 106, 10, 200, 179 },
                            Nom = "pcwryqcdk",
                            Prenom = "udkc"
                        },
                        new
                        {
                            Id = 4,
                            Email = "qol3sei4s@0d586.syh",
                            IsVisible = false,
                            MotDePasse = new byte[] { 129, 74, 112, 187, 37, 35, 160, 188, 230, 70, 178, 75, 5, 19, 213, 219, 34, 1, 15, 173, 5, 185, 175, 222, 184, 87, 21, 55, 143, 71, 55, 234, 102, 185, 185, 82, 186, 105, 140, 126, 227, 238, 37, 97, 4, 75, 26, 70, 208, 171, 245, 249, 79, 67, 37, 112, 107, 121, 114, 95, 119, 132, 96, 240 },
                            Nom = "vfxawn",
                            Prenom = "aeinpz"
                        },
                        new
                        {
                            Id = 5,
                            Email = "uj0u7a@9oa.zai",
                            IsVisible = false,
                            MotDePasse = new byte[] { 19, 34, 156, 43, 95, 90, 236, 80, 163, 192, 197, 239, 160, 231, 254, 190, 196, 119, 121, 26, 25, 203, 138, 148, 165, 244, 250, 79, 166, 248, 206, 218, 113, 36, 89, 149, 97, 222, 149, 228, 114, 194, 238, 223, 47, 70, 202, 152, 181, 59, 104, 243, 51, 124, 168, 105, 132, 136, 226, 238, 56, 194, 21, 37 },
                            Nom = "aujjgrcd",
                            Prenom = "tcj"
                        },
                        new
                        {
                            Id = 6,
                            Email = "bsmzt@acpxe.hj",
                            IsVisible = false,
                            MotDePasse = new byte[] { 122, 197, 179, 128, 56, 254, 22, 45, 173, 156, 101, 44, 98, 233, 158, 32, 179, 127, 1, 88, 199, 16, 38, 52, 121, 242, 80, 64, 72, 162, 248, 172, 72, 211, 45, 103, 210, 48, 166, 0, 37, 166, 1, 184, 229, 177, 251, 108, 213, 36, 31, 75, 252, 51, 214, 217, 85, 79, 51, 160, 196, 13, 30, 50 },
                            Nom = "hdjynnqqf",
                            Prenom = "lufnj"
                        },
                        new
                        {
                            Id = 7,
                            Email = "du68y@ycu9.oxx",
                            IsVisible = false,
                            MotDePasse = new byte[] { 64, 75, 108, 240, 244, 112, 150, 51, 145, 241, 236, 174, 129, 220, 224, 180, 55, 18, 123, 105, 195, 49, 177, 1, 238, 113, 111, 118, 61, 212, 12, 242, 180, 233, 174, 13, 71, 36, 187, 137, 217, 168, 59, 180, 53, 195, 155, 91, 118, 45, 197, 221, 171, 186, 36, 253, 60, 165, 184, 204, 248, 32, 42, 20 },
                            Nom = "eyaayyga",
                            Prenom = "diuisz"
                        },
                        new
                        {
                            Id = 8,
                            Email = "n32lwisprjk@z5t.pbg",
                            IsVisible = false,
                            MotDePasse = new byte[] { 51, 216, 96, 163, 232, 14, 150, 146, 58, 93, 183, 106, 19, 104, 197, 58, 206, 121, 163, 104, 59, 55, 78, 109, 103, 80, 70, 133, 22, 41, 78, 251, 123, 253, 219, 76, 43, 200, 247, 177, 235, 121, 204, 6, 28, 124, 23, 67, 234, 58, 68, 72, 194, 246, 20, 173, 186, 19, 121, 159, 239, 85, 140, 152 },
                            Nom = "xducci",
                            Prenom = "asdw"
                        },
                        new
                        {
                            Id = 9,
                            Email = "f4z4kd3a3jdz2@673.sdp",
                            IsVisible = false,
                            MotDePasse = new byte[] { 214, 204, 24, 132, 99, 144, 200, 182, 94, 79, 81, 57, 82, 222, 242, 141, 188, 74, 189, 0, 149, 24, 98, 145, 138, 111, 56, 196, 153, 52, 145, 205, 150, 32, 62, 125, 245, 30, 58, 119, 213, 102, 24, 174, 173, 179, 133, 70, 101, 92, 240, 154, 43, 155, 63, 101, 128, 36, 71, 197, 63, 2, 145, 197 },
                            Nom = "mmfniq",
                            Prenom = "ejmn"
                        },
                        new
                        {
                            Id = 10,
                            Email = "q5g4asks2l@shb4v.dbq",
                            IsVisible = false,
                            MotDePasse = new byte[] { 76, 180, 251, 235, 33, 35, 246, 178, 61, 59, 4, 253, 80, 164, 213, 149, 31, 11, 110, 3, 209, 230, 6, 52, 82, 252, 228, 88, 148, 249, 220, 196, 223, 239, 187, 232, 132, 199, 182, 57, 126, 71, 21, 211, 175, 177, 68, 12, 157, 39, 106, 65, 213, 119, 163, 133, 22, 7, 151, 27, 113, 90, 172, 64 },
                            Nom = "hxpkun",
                            Prenom = "wbqg"
                        },
                        new
                        {
                            Id = 11,
                            Email = "4uitexhzid@org.aav",
                            IsVisible = false,
                            MotDePasse = new byte[] { 6, 110, 210, 82, 104, 44, 101, 222, 107, 151, 61, 83, 253, 35, 107, 87, 210, 86, 135, 83, 174, 38, 72, 10, 161, 51, 2, 72, 189, 235, 204, 253, 26, 52, 60, 185, 42, 210, 103, 140, 124, 92, 251, 128, 46, 196, 45, 30, 216, 14, 29, 107, 155, 172, 111, 160, 3, 211, 28, 232, 219, 74, 175, 42 },
                            Nom = "gseyrq",
                            Prenom = "umd"
                        },
                        new
                        {
                            Id = 12,
                            Email = "xh13zd@wiva.qk",
                            IsVisible = false,
                            MotDePasse = new byte[] { 75, 253, 206, 232, 197, 244, 240, 28, 11, 236, 105, 16, 254, 137, 225, 244, 78, 134, 155, 220, 117, 80, 125, 38, 4, 224, 118, 82, 121, 251, 106, 231, 34, 125, 134, 178, 77, 28, 186, 215, 188, 13, 238, 69, 32, 232, 32, 52, 71, 125, 73, 231, 75, 184, 171, 30, 54, 1, 199, 160, 220, 137, 122, 217 },
                            Nom = "pllyuk",
                            Prenom = "goxmcd"
                        },
                        new
                        {
                            Id = 13,
                            Email = "dl1fpli0a1a8@o3o.ea",
                            IsVisible = false,
                            MotDePasse = new byte[] { 49, 177, 43, 65, 52, 124, 114, 78, 24, 212, 235, 71, 123, 9, 80, 6, 200, 19, 148, 74, 249, 33, 148, 28, 250, 146, 128, 75, 155, 222, 214, 102, 115, 182, 231, 208, 64, 173, 217, 67, 221, 98, 197, 16, 25, 234, 123, 166, 58, 251, 54, 236, 98, 187, 37, 86, 134, 205, 228, 5, 160, 7, 36, 12 },
                            Nom = "qyalhgiap",
                            Prenom = "ccb"
                        },
                        new
                        {
                            Id = 14,
                            Email = "fy281sy3px8m@7noc.ln",
                            IsVisible = false,
                            MotDePasse = new byte[] { 125, 130, 217, 19, 61, 194, 240, 37, 92, 111, 236, 239, 186, 119, 151, 73, 209, 246, 62, 143, 38, 81, 5, 162, 151, 23, 104, 97, 145, 196, 125, 120, 14, 218, 10, 220, 139, 76, 11, 2, 225, 206, 232, 98, 129, 163, 88, 34, 134, 172, 112, 64, 29, 231, 9, 184, 122, 230, 64, 32, 251, 189, 74, 53 },
                            Nom = "stdwzcet",
                            Prenom = "eviwvf"
                        },
                        new
                        {
                            Id = 15,
                            Email = "vgqtnrj1tea78@ho9d.kz",
                            IsVisible = false,
                            MotDePasse = new byte[] { 119, 50, 81, 223, 118, 78, 177, 125, 193, 63, 187, 141, 52, 40, 192, 195, 159, 235, 157, 185, 98, 67, 49, 223, 8, 52, 253, 26, 139, 47, 103, 143, 153, 98, 82, 45, 110, 117, 234, 156, 39, 54, 188, 22, 221, 106, 141, 94, 137, 156, 136, 141, 209, 178, 9, 62, 47, 185, 130, 244, 202, 175, 25, 184 },
                            Nom = "hocrd",
                            Prenom = "qlnqyr"
                        },
                        new
                        {
                            Id = 16,
                            Email = "cmupjyr@8kz.nk",
                            IsVisible = false,
                            MotDePasse = new byte[] { 81, 95, 176, 26, 69, 59, 78, 241, 190, 104, 1, 58, 88, 22, 46, 136, 201, 184, 59, 217, 114, 178, 251, 78, 5, 96, 64, 222, 182, 202, 171, 171, 78, 193, 142, 63, 220, 6, 93, 146, 120, 7, 166, 127, 136, 160, 194, 190, 116, 198, 118, 109, 144, 244, 119, 138, 73, 8, 210, 255, 88, 42, 205, 231 },
                            Nom = "nhviwqvz",
                            Prenom = "tzefh"
                        },
                        new
                        {
                            Id = 17,
                            Email = "v9up8r@ldx.dp",
                            IsVisible = false,
                            MotDePasse = new byte[] { 145, 27, 22, 46, 156, 99, 40, 90, 59, 120, 160, 134, 100, 129, 84, 190, 144, 177, 40, 23, 204, 140, 62, 21, 206, 127, 247, 46, 84, 197, 175, 136, 184, 25, 74, 225, 42, 83, 129, 161, 188, 31, 27, 132, 37, 163, 191, 234, 231, 185, 176, 65, 187, 189, 123, 134, 63, 85, 21, 131, 246, 255, 62, 33 },
                            Nom = "fpznyk",
                            Prenom = "qwktqd"
                        },
                        new
                        {
                            Id = 18,
                            Email = "r4ej6@jcc.xwc",
                            IsVisible = false,
                            MotDePasse = new byte[] { 140, 240, 27, 54, 94, 169, 182, 181, 139, 86, 222, 129, 216, 22, 66, 86, 196, 112, 114, 241, 209, 33, 158, 106, 224, 130, 96, 12, 173, 139, 14, 149, 226, 38, 158, 251, 66, 163, 126, 205, 137, 2, 64, 219, 88, 120, 28, 98, 219, 12, 78, 61, 206, 59, 70, 153, 35, 68, 230, 118, 77, 11, 216, 118 },
                            Nom = "tdqwpimnp",
                            Prenom = "qhg"
                        },
                        new
                        {
                            Id = 19,
                            Email = "f3bxoj@kk4b.vzd",
                            IsVisible = false,
                            MotDePasse = new byte[] { 232, 100, 185, 53, 235, 143, 191, 1, 175, 16, 152, 177, 230, 254, 212, 218, 155, 155, 148, 204, 177, 40, 175, 95, 56, 92, 87, 107, 30, 113, 18, 184, 171, 198, 50, 157, 252, 204, 250, 60, 52, 221, 190, 249, 28, 201, 238, 249, 208, 248, 124, 248, 58, 133, 128, 30, 156, 106, 137, 191, 18, 35, 222, 49 },
                            Nom = "hrmemxsv",
                            Prenom = "upory"
                        },
                        new
                        {
                            Id = 20,
                            Email = "q09gda@i2hc.vw",
                            IsVisible = false,
                            MotDePasse = new byte[] { 183, 83, 150, 114, 222, 251, 86, 28, 247, 33, 237, 229, 134, 209, 218, 118, 27, 79, 84, 213, 91, 82, 110, 97, 229, 33, 193, 78, 7, 94, 112, 152, 172, 61, 213, 53, 139, 151, 31, 94, 32, 106, 210, 57, 224, 239, 160, 43, 19, 82, 194, 129, 59, 121, 52, 148, 23, 156, 72, 101, 22, 18, 210, 162 },
                            Nom = "tpxnyabou",
                            Prenom = "nibo"
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.VaccinEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fabricant")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsVisible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("NbJoursIntervalleMaximum")
                        .HasColumnType("int");

                    b.Property<int>("NbJoursIntervalleMinimum")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasFilter("[Nom] IS NOT NULL");

                    b.ToTable("Vaccin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fabricant = "eclxpshrq",
                            IsVisible = false,
                            NbJoursIntervalleMaximum = 46,
                            NbJoursIntervalleMinimum = 15,
                            Nom = "eclxpshrq"
                        },
                        new
                        {
                            Id = 2,
                            Fabricant = "dkwzqg",
                            IsVisible = false,
                            NbJoursIntervalleMaximum = 52,
                            NbJoursIntervalleMinimum = 23,
                            Nom = "dkwzqg"
                        },
                        new
                        {
                            Id = 3,
                            Fabricant = "owurwfyeg",
                            IsVisible = false,
                            NbJoursIntervalleMaximum = 47,
                            NbJoursIntervalleMinimum = 23,
                            Nom = "owurwfyeg"
                        });
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.CentreVaccinationEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.EntrepotEntity", "Entrepot")
                        .WithMany()
                        .HasForeignKey("EntrepotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrepot");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.EntrepotEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.AdresseEntity", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.HoraireEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.CentreVaccinationEntity", "Centre")
                        .WithMany("Horaires")
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.LotEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.VaccinEntity", "Vaccin")
                        .WithMany("Lots")
                        .HasForeignKey("VaccinId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Vaccin");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.PatientEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.AdresseEntity", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.UtilisateurEntity", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresse");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.PersonnelEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.CentreVaccinationEntity", "Centre")
                        .WithMany("Personnel")
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.UtilisateurEntity", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.RendezVousEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.CentreVaccinationEntity", "Centre")
                        .WithMany("RDVs")
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.LotEntity", "Lot")
                        .WithMany("RDVs")
                        .HasForeignKey("LotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.PatientEntity", "Patient")
                        .WithMany("RDVs")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.PersonnelEntity", "Personnel")
                        .WithMany("RDVs")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.VaccinEntity", "Vaccin")
                        .WithMany("RDVs")
                        .HasForeignKey("VaccinId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Centre");

                    b.Navigation("Lot");

                    b.Navigation("Patient");

                    b.Navigation("Personnel");

                    b.Navigation("Vaccin");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.TransitEntity", b =>
                {
                    b.HasOne("CentreDeVaccination.DB.Entities.EntrepotEntity", "Entrepot")
                        .WithMany("Transits")
                        .HasForeignKey("EntrepotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CentreDeVaccination.DB.Entities.LotEntity", "Lot")
                        .WithMany("Transits")
                        .HasForeignKey("LotId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Entrepot");

                    b.Navigation("Lot");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.CentreVaccinationEntity", b =>
                {
                    b.Navigation("Horaires");

                    b.Navigation("Personnel");

                    b.Navigation("RDVs");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.EntrepotEntity", b =>
                {
                    b.Navigation("Transits");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.LotEntity", b =>
                {
                    b.Navigation("RDVs");

                    b.Navigation("Transits");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.PatientEntity", b =>
                {
                    b.Navigation("RDVs");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.PersonnelEntity", b =>
                {
                    b.Navigation("RDVs");
                });

            modelBuilder.Entity("CentreDeVaccination.DB.Entities.VaccinEntity", b =>
                {
                    b.Navigation("Lots");

                    b.Navigation("RDVs");
                });
#pragma warning restore 612, 618
        }
    }
}
